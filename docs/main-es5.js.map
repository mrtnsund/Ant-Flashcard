{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/add/add.component.ts","webpack:///src/app/add/add.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/auth.guard.ts","webpack:///src/app/auth/auth.interceptor.ts","webpack:///src/app/auth/login/login.component.ts","webpack:///src/app/auth/login/login.component.html","webpack:///src/app/auth/register/register.component.ts","webpack:///src/app/auth/register/register.component.html","webpack:///src/app/header/header.component.ts","webpack:///src/app/header/header.component.html","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/icons-provider.module.ts","webpack:///src/app/page-not-found/page-not-found.component.ts","webpack:///src/app/page-not-found/page-not-found.component.html","webpack:///src/app/review/custom/custom.component.ts","webpack:///src/app/review/custom/custom.component.html","webpack:///src/app/review/random/random.component.ts","webpack:///src/app/review/random/random.component.html","webpack:///src/app/review/review.component.ts","webpack:///src/app/review/review.component.html","webpack:///src/app/services/auth.service.ts","webpack:///src/app/services/card.service.ts","webpack:///src/app/services/date.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AddComponent","cardService","formBuilder","notification","dateService","router","authService","listOfOption","size","newTags","addCardForm","group","question","answer","tags","getCards","subscribe","cards","getExistingTags","allTags","forEach","x","element","push","label","value","length","uniqueTags","console","log","card","newCard","date","transformDate","Date","success","create","nzPlacement","addCard","reset","get","logout","navigate","onSubmit","selector","templateUrl","styleUrls","routes","path","redirectTo","pathMatch","component","canActivate","AppRoutingModule","forRoot","imports","AppComponent","isCollapsed","AppModule","provide","useValue","useClass","multi","declarations","providers","bootstrap","AuthGuard","next","state","isLoggedIn","providedIn","AuthInterceptor","cloned","clone","setHeaders","Authorization","getAccessToken","handle","LoginComponent","fb","error","i","validateForm","controls","markAsDirty","updateValueAndValidity","email","password","login","pipe","res","localStorage","setItem","token","err","message","required","submitForm","RegisterComponent","errors","passwordRepeat","emailRegex","RegExp","passwordRegex","user","username","test","register","HeaderComponent","HomeComponent","noOfDueCards","getNoOfDueCards","today","filter","icons","IconsProviderModule","PageNotFoundComponent","CustomComponent","_hotkeysService","size2","loaded","selectTagForm","add","event","revealAnswer","nextCard","toggleAnswer","index","some","val","selectedTags","indexOf","cardToDisplay","dueCards","progressPercent","tag","getDueCards","RandomComponent","totalTime","timer","source","timeLeft","ReviewComponent","againClick","easyClick","mediumClick","hardClick","newDate","setDate","getDate","updateCard","AuthService","http","configUrl","headers","set","currentUser","post","getItem","authToken","removeItem","userData","JSON","parse","msg","ErrorEvent","status","CardService","updatedCard","url","put","cardToDelete","DateService","datePipe","transform","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\nimport { CardService } from '../services/card.service';\nimport { ICard } from '../shared/card.interface';\nimport * as _ from 'lodash';\nimport { FormBuilder } from '@angular/forms';\nimport { NzNotificationService } from 'ng-zorro-antd/notification';\nimport { DateService } from '../services/date.service';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\n\n@Component({\n  selector: 'app-add',\n  templateUrl: './add.component.html',\n  styleUrls: ['./add.component.css']\n})\nexport class AddComponent implements OnInit {\n  addCardForm;\n  cards: ICard[];\n  listOfOption: Array<{ label: string; value: string }> = [];\n  size = 'default';\n  newTags = [];\n\n  constructor(\n    private cardService: CardService,\n    private formBuilder: FormBuilder,\n    private notification: NzNotificationService,\n    private dateService: DateService,\n    private router: Router,\n    private authService: AuthService,\n  ) {\n    this.addCardForm = this.formBuilder.group({\n      question: '',\n      answer: '',\n      tags: [],\n    });\n  }\n\n  ngOnInit(): void {\n    this.cardService.getCards().subscribe(cards => {\n      this.cards = cards;\n      this.listOfOption = this.getExistingTags();\n    });\n  }\n\n  getExistingTags(): Array<any> {\n    const allTags = [];\n    this.cards.forEach(x => x.tags.forEach(element => {\n      allTags.push({ label: element, value: element });\n    }))\n    if (allTags.length === 0) {\n      return null;\n    }\n\n    const uniqueTags = _.uniqBy(allTags, 'label');\n    console.log(uniqueTags);\n    return uniqueTags;\n    // return Array.from(new Set(uniqueTags));\n  }\n  onSubmit(card) {\n    const newCard: ICard = {\n      question: card.question,\n      answer: card.answer,\n      tags: card.tags,\n      date: this.dateService.transformDate(new Date()),\n      success: 0,\n    };\n    if (card.question && card.answer) {\n      this.notification.create(\n        'success',\n        'Card added',\n        '',\n        {nzPlacement: 'bottomRight'},\n      );\n      this.cardService.addCard(newCard).subscribe();\n      this.addCardForm.reset({\n        tags: this.addCardForm.get('tags').value\n      });\n    } else {\n      this.notification.create(\n        'error',\n        'Please enter a question and answer',\n        '',\n        {nzPlacement: 'bottomLeft'}\n      );\n    }\n  }\n  logout(): void {\n    this.authService.logout();\n    this.router.navigate(['/login']);\n  }\n\n}\n\n","<app-header class=\"fw\"></app-header>\r\n<div class=\"container\">\r\n  <div class=\"content\">\r\n    <div class=\"greeting\">\r\n      <h1 style=\"text-align: center;\">Add new card</h1>\r\n    </div>\r\n    <div class=\"cards\">\r\n      <div class=\"card\">\r\n        <div class=\"upper\">\r\n          <form id=\"addCardForm\" [formGroup]=\"addCardForm\" (ngSubmit)=\"onSubmit(addCardForm.value)\">\r\n\r\n            <textarea class=\"question\" nz-input placeholder=\"Question\" [nzAutosize]=\"{ minRows: 3, maxRows: 3 }\" formControlName=\"question\" style=\"height: 100px;\"></textarea>\r\n            <textarea class=\"answer\" nz-input placeholder=\"Answer\" [nzAutosize]=\"{ minRows: 3, maxRows: 3 }\" formControlName=\"answer\"></textarea>\r\n          \r\n            <nz-select class=\"test\" [nzSize]=\"size\" nzMode=\"tags\" nzPlaceHolder=\"Select tags\" formControlName=\"tags\">\r\n              <nz-option *ngFor=\"let option of listOfOption\" [nzLabel]=\"option.label\" [nzValue]=\"option.value\"></nz-option>\r\n            </nz-select>\r\n            <button id=\"submitBtn\" nz-button nzType=\"default\" type=\"submit\" style=\"display: none;\">Add card</button>\r\n          </form>\r\n        </div>\r\n        <div class=\"lower\">\r\n\r\n        </div>\r\n        <div class=\"revealButton\" onclick=\"document.getElementById('submitBtn').click()\">\r\n          <p>\r\n            ADD CARD\r\n          </p>\r\n        </div>\r\n      </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n<style>\r\n  .question {\r\n    margin-left: 5%;\r\n    margin-right: 5%;\r\n    margin-top: 15px;\r\n    width: 90%;\r\n  }\r\n  .answer {\r\n    margin-top: 15px;\r\n    margin-left: 5%;\r\n    margin-right: 5%;\r\n    width: 90%;\r\n  }\r\n\r\n    .revealButton {\r\n    text-align: center;\r\n    box-sizing: border-box;\r\n    border-top: 1px solid #F3F4F5;\r\n    height: 50px;\r\n    width: 100%;\r\n    position: absolute;\r\n    bottom: 0;\r\n    background-color: #34DA74;\r\n    color: white;\r\n    border-bottom-right-radius: 10px;\r\n    border-bottom-left-radius: 10px;\r\n  }\r\n  .revealButton:hover {\r\n    cursor: pointer;\r\n  }\r\n  .revealButton p {\r\n    font-weight: 600;\r\n    padding-top: 15px;\r\n  }\r\n    .cards {\r\n    text-align: center;\r\n    display: flex;\r\n    flex-direction: row;\r\n  }\r\n  .card {\r\n    position: relative;\r\n    border-radius: 10px;\r\n    margin: 10px;\r\n    background-color: white;\r\n    width: 600px;\r\n    height: 300px;\r\n  }\r\n  .upper {\r\n    height: 95px;\r\n    border-top-right-radius: 10px;\r\n    border-top-left-radius: 10px;\r\n  }\r\n  .lower {\r\n    height: 50px;\r\n    background-color: white;\r\n  }\r\n  .lower h3 {\r\n    margin-top: -10px;\r\n  }\r\n  .lower p {\r\n    font-size: 16px;\r\n    padding-top: 10px;\r\n  }\r\n\r\n  .greeting {\r\n    margin-top: 100px;\r\n    padding-bottom: 30px;\r\n  }\r\n  .greeting h1, .greeting p {\r\n    margin-top: 15px;\r\n  }\r\n  .greeting p {\r\n    margin-top: -15px;\r\n  }\r\n  .greeting h1 {\r\n    font-weight: bold;\r\n  }\r\n\r\n  .container {\r\n    display: flex; \r\n    justify-content: center;\r\n    flex-wrap: wrap;\r\n    background-color: #EBEFF5 !important;\r\n    width: 100vw;\r\n    height: calc(100vh - 100px);\r\n  }\r\n\r\n  .header {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    background-color: white;\r\n    height: 10vh;\r\n    align-content: center;\r\n  }\r\n  .left {\r\n    padding-left: 50px;\r\n    padding-top: 30px;\r\n    font-size: 20px;\r\n    justify-self: flex-start;\r\n  }\r\n  .right {\r\n    padding-right: 50px;\r\n    font-size: 20px;\r\n    padding-top: 30px;\r\n    float:right;\r\n  }\r\n  .right p {\r\n    cursor: pointer;\r\n  }\r\n  .left p {\r\n    cursor: pointer;\r\n  }\r\n  @media only screen and (max-width: 700px) {\r\n    .greeting {\r\n      padding-bottom: 10px;\r\n    }\r\n    .card {\r\n      width: 450px;\r\n      height: 390px;\r\n      margin: 5px;\r\n    }\r\n  }\r\n  @media only screen and (max-width: 500px) {\r\n    .card {\r\n      width: 360px;\r\n      height: 312px;\r\n      margin: 2px;\r\n    }\r\n  }\r\n</style>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AuthGuard } from './auth.guard';\nimport { HomeComponent } from './home/home.component';\nimport { RegisterComponent } from './auth/register/register.component';\nimport { LoginComponent } from './auth/login/login.component';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\nimport { AddComponent } from './add/add.component';\nimport { ReviewComponent } from './review/review.component';\nimport { CustomComponent } from './review/custom/custom.component';\nimport { RandomComponent } from './review/random/random.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/login', pathMatch: 'full' },\n  { path: 'home', component: HomeComponent, canActivate: [AuthGuard]},\n  { path: 'login', component: LoginComponent},\n  { path: 'register', component: RegisterComponent },\n  { path: 'add', component: AddComponent, canActivate: [AuthGuard]},\n  { path: 'review', component: ReviewComponent, canActivate: [AuthGuard]},\n  { path: 'shuffle', component: RandomComponent, canActivate: [AuthGuard]},\n  { path: 'custom', component: CustomComponent, canActivate: [AuthGuard]},\n  { path: '404', component: PageNotFoundComponent},\n  { path: '**', redirectTo: '/404'},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  isCollapsed = false;\n}\n","<div class=\"container\">\r\n<router-outlet clas=\"fw\"></router-outlet>\r\n</div>\r\n\r\n<style>\r\n  .container {\r\n    width: 100vh;\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n  }\r\n</style>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { IconsProviderModule } from './icons-provider.module';\r\nimport { NzLayoutModule } from 'ng-zorro-antd/layout';\r\nimport { NzMenuModule } from 'ng-zorro-antd/menu';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { NZ_I18N } from 'ng-zorro-antd/i18n';\r\nimport { nb_NO } from 'ng-zorro-antd/i18n';\r\nimport { registerLocaleData, DatePipe } from '@angular/common';\r\nimport nb from '@angular/common/locales/nb';\r\nimport { LoginComponent } from './auth/login/login.component';\r\nimport { RegisterComponent } from './auth/register/register.component';\r\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { NzFormModule } from 'ng-zorro-antd/form';\r\nimport { NzIconModule } from 'ng-zorro-antd/icon';\r\nimport { NzButtonModule } from 'ng-zorro-antd/button';\r\nimport { NzInputModule } from 'ng-zorro-antd/input';\r\nimport { CardService } from './services/card.service';\r\nimport { AuthService } from './services/auth.service';\r\nimport { ReviewComponent } from './review/review.component';\r\nimport { AddComponent } from './add/add.component';\r\nimport { NzSelectModule } from 'ng-zorro-antd/select';\r\nimport { NzTagModule } from 'ng-zorro-antd/tag';\r\nimport { NzNotificationModule } from 'ng-zorro-antd/notification';\r\nimport { DateService } from './services/date.service';\r\nimport { NzProgressModule } from 'ng-zorro-antd/progress';\r\nimport { NzSpinModule } from 'ng-zorro-antd/spin';\r\nimport { RandomComponent } from './review/random/random.component';\r\nimport { CustomComponent } from './review/custom/custom.component';\r\nimport { AuthInterceptor } from './auth/auth.interceptor';\r\nimport { HotkeyModule } from 'angular2-hotkeys';\r\nimport { NzToolTipModule } from 'ng-zorro-antd/tooltip';\r\nimport { HeaderComponent } from './header/header.component';\r\nregisterLocaleData(nb);\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HomeComponent,\r\n    LoginComponent,\r\n    RegisterComponent,\r\n    PageNotFoundComponent,\r\n    ReviewComponent,\r\n    AddComponent,\r\n    RandomComponent,\r\n    CustomComponent,\r\n    HeaderComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    BrowserAnimationsModule,\r\n    IconsProviderModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    HotkeyModule.forRoot(),\r\n    // NG ZORRO\r\n    NzLayoutModule,\r\n    NzMenuModule,\r\n    NzFormModule,\r\n    NzIconModule,\r\n    NzInputModule,\r\n    NzButtonModule,\r\n    NzSelectModule,\r\n    NzTagModule,\r\n    NzNotificationModule,\r\n    NzProgressModule,\r\n    NzSpinModule,\r\n    NzToolTipModule\r\n  ],\r\n  providers: [\r\n    { provide: NZ_I18N, useValue: nb_NO },\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: AuthInterceptor,\r\n      multi: true\r\n    },\r\n    CardService,\r\n    AuthService,\r\n    DatePipe,\r\n    DateService,\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from './services/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(\n    public authService: AuthService,\n    public router: Router,\n  ){\n\n  }\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n      if (this.authService.isLoggedIn() === true) {\n        return true;\n      } else {\n        this.router.navigate(['/login']);\n        return false;\n      }\n  }\n}\n","import { HttpInterceptor, HttpHandler, HttpRequest, HttpEvent } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthService } from '../services/auth.service';\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n  constructor(private authService: AuthService) {\r\n\r\n  }\r\n\r\n  intercept(req: HttpRequest<any>,\r\n            next: HttpHandler): Observable<HttpEvent<any>> {\r\n\r\n        const cloned = req.clone({\r\n          setHeaders: {\r\n            Authorization: `bearer ${this.authService.getAccessToken()}`\r\n          }\r\n        });\r\n        return next.handle(cloned);\r\n      }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { Router } from '@angular/router';\r\nimport { NzNotificationService } from 'ng-zorro-antd/notification';\r\nimport { timeout } from 'rxjs/operators';\r\nimport { TimeoutError } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  validateForm: FormGroup;\r\n  error;\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    public authService: AuthService,\r\n    public router: Router,\r\n    private notification: NzNotificationService,\r\n\r\n  ) {\r\n    this.error = '';\r\n    if (this.authService.isLoggedIn()) {\r\n      this.router.navigate(['/home']);\r\n    }\r\n  }\r\n  submitForm(): void {\r\n    // tslint:disable-next-line: forin\r\n    for (const i in this.validateForm.controls) {\r\n      this.validateForm.controls[i].markAsDirty();\r\n      this.validateForm.controls[i].updateValueAndValidity();\r\n    }\r\n    if (this.validateForm.controls.email.value && this.validateForm.controls.password.value) {\r\n      this.authService\r\n        .login(this.validateForm.value)\r\n        .pipe(timeout(5000))\r\n        .subscribe((res: any) => {\r\n          localStorage.setItem('authorization', res.token);\r\n          this.router.navigate(['/home']);\r\n        },\r\n        err => {\r\n          if (err instanceof TimeoutError) {\r\n            this.notification.create(\r\n              'error',\r\n              'Server taking too long to respond',\r\n              '',\r\n              {nzPlacement: 'bottomRight'},\r\n            );\r\n          } else {\r\n            this.notification.create(\r\n              'error',\r\n              `${err.message}`,\r\n              '',\r\n              {nzPlacement: 'bottomRight'},\r\n            );\r\n          }\r\n        });\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.validateForm = this.fb.group({\r\n      email: [null, [Validators.required]],\r\n      password: [null, [Validators.required]],\r\n    });\r\n  }\r\n\r\n}","<div class=\"background\">\r\n<div class=\"container\">\r\n  <h1 nz-typography>Sign In</h1>\r\n  <p>Sign in below to start reviewing your cards</p>\r\n  <form nz-form [formGroup]=\"validateForm\" class=\"login-form\" (ngSubmit)=\"submitForm()\">\r\n    <nz-form-item>\r\n      <nz-form-control nzErrorTip=\"Please input your email!\">\r\n        <nz-input-group nzPrefixIcon=\"user\">\r\n          <input type=\"text\" nz-input formControlName=\"email\" placeholder=\"Email\" required />\r\n        </nz-input-group>\r\n      </nz-form-control>\r\n    </nz-form-item>\r\n    <nz-form-item>\r\n      <nz-form-control nzErrorTip=\"Please input your Password!\">\r\n        <nz-input-group nzPrefixIcon=\"lock\">\r\n          <input type=\"password\" nz-input formControlName=\"password\" placeholder=\"Password\" required/>\r\n        </nz-input-group>\r\n      </nz-form-control>\r\n    </nz-form-item>\r\n\r\n    <button nz-button class=\"login-form-button login-form-margin\" nzBlock [nzType]=\"'primary'\">Sign in</button>\r\n    <div class=\"bottomText\">\r\n      Don't have an account? <a [routerLink]=\"['/register']\"> Sign up </a>\r\n    </div>\r\n  </form>\r\n</div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { Router } from '@angular/router';\r\nimport { IUser } from 'src/app/shared/user.interface';\r\nimport { NzNotificationService } from 'ng-zorro-antd/notification';\r\nimport { timeout } from 'rxjs/operators';\r\nimport { TimeoutError } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n  validateForm: FormGroup;\r\n  errors = '';\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    public authService: AuthService,\r\n    public router: Router,\r\n    private notification: NzNotificationService\r\n  ) {\r\n    if (this.authService.isLoggedIn()) {\r\n      this.router.navigate(['/home']);\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.validateForm = this.fb.group({\r\n      email: [null, [Validators.required]],\r\n      password: [null, [Validators.required]],\r\n      passwordRepeat: [null, [Validators.required]]\r\n    });\r\n  }\r\n\r\n  submitForm(): void {\r\n    // tslint:disable-next-line: forin\r\n    for (const i in this.validateForm.controls) {\r\n      this.validateForm.controls[i].markAsDirty();\r\n      this.validateForm.controls[i].updateValueAndValidity();\r\n    }\r\n    const email = this.validateForm.controls.email.value;\r\n    const password = this.validateForm.controls.password.value;\r\n    const passwordRepeat = this.validateForm.controls.passwordRepeat.value;\r\n    const emailRegex = new RegExp(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/);\r\n    const passwordRegex = new RegExp(/^(?=.*[0-9]+.*)(?=.*[a-zA-Z]+.*)[0-9a-zA-Z]{6,}$/);\r\n\r\n    if (email && password && passwordRepeat) {\r\n      if ((password === passwordRepeat)) {\r\n        const user: IUser = {\r\n          username: '',\r\n          email,\r\n          password,\r\n          cards: [],\r\n        };\r\n\r\n        if (emailRegex.test(email)) {\r\n          if (passwordRegex.test(password)) {\r\n            this.authService\r\n              .register(user)\r\n              .pipe(timeout(5000))\r\n              .subscribe(\r\n                (res: any) => {\r\n                localStorage.setItem('authorization', res.token);\r\n                this.router.navigate(['/home']);\r\n                },\r\n              err => {\r\n                if (err instanceof TimeoutError) {\r\n                  this.notification.create(\r\n                    'error',\r\n                    'Server taking too long to respond',\r\n                    '',\r\n                    {nzPlacement: 'bottomRight'},\r\n                  );\r\n                } else {\r\n                this.notification.create(\r\n                  'error',\r\n                  `${err.message}`,\r\n                  '',\r\n                  {nzPlacement: 'bottomRight'},\r\n                );\r\n                }\r\n              }\r\n            );\r\n          } else {\r\n            this.notification.create(\r\n              'error',\r\n              'Password must contain at least one letter, at least one number, and be longer than six charaters.',\r\n              '',\r\n              {nzPlacement: 'bottomRight'},\r\n            );\r\n          }\r\n        } else {\r\n          this.notification.create(\r\n            'error',\r\n            'Please enter a valid email',\r\n            '',\r\n            {nzPlacement: 'bottomRight'}\r\n          );\r\n        }\r\n      } else {\r\n        this.notification.create(\r\n          'error',\r\n          `Password does not match`,\r\n          '',\r\n          {nzPlacement: 'bottomRight'},\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"background\">\n<div class=\"container\">\n  <h1 nz-typography>Register</h1>\n  <p>Please register an account below to start creating cards</p>\n  <p style=\"color: rgb(253, 90, 90)\">  {{errors}} </p>\n  <form nz-form [formGroup]=\"validateForm\" class=\"login-form\" (ngSubmit)=\"submitForm()\">\n    <nz-form-item>\n      <nz-form-control nzErrorTip=\"Please input your email!\">\n        <nz-input-group nzPrefixIcon=\"user\">\n          <input type=\"text\" nz-input formControlName=\"email\" placeholder=\"Email\" required />\n        </nz-input-group>\n      </nz-form-control>\n    </nz-form-item>\n    <nz-form-item>\n      <nz-form-control nzErrorTip=\"Please input your Password!\">\n        <nz-input-group nzPrefixIcon=\"lock\">\n          <input type=\"password\" nz-input formControlName=\"password\" placeholder=\"Password\" required/>\n        </nz-input-group>\n      </nz-form-control>\n    </nz-form-item>\n    <nz-form-item>\n      <nz-form-control nzErrorTip=\"Please repeat your Password!\">\n        <nz-input-group nzPrefixIcon=\"lock\">\n          <input type=\"password\" nz-input formControlName=\"passwordRepeat\" placeholder=\"Repeat your password\" required/>\n        </nz-input-group>\n      </nz-form-control>\n    </nz-form-item>\n\n    <button nz-button class=\"login-form-button login-form-margin\" nzBlock [nzType]=\"'primary'\">Register</button>\n    <div class=\"bottomText\">\n      Already have an account? <a [routerLink]=\"['/login']\"> Login </a>\n    </div>\n  </form>\n</div>\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../services/auth.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n\r\n  constructor(private authService: AuthService, private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  logout(): void {\r\n    this.authService.logout();\r\n    this.router.navigate(['/login']);\r\n  }\r\n}\r\n","  <div class=\"header\">\r\n    <div class=\"left\"><a [routerLink]=\"['/home']\"><i nz-icon nzType=\"home\" nzTheme=\"outline\"></i></a></div>\r\n    <div class=\"right\">\r\n      <p (click)=\"logout()\"><i nz-icon nzType=\"logout\" nzTheme=\"outline\"></i></p>\r\n    </div>\r\n  </div>\r\n\r\n  <style>\r\n\r\n  .header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  background-color: white;\r\n  height: 100px;\r\n  width: 100vw;\r\n}\r\n\r\n.left {\r\n  padding-left: 70px;\r\n  padding-top: 30px;\r\n  font-size: 25px;\r\n  justify-self: flex-start;\r\n}\r\n.right {\r\n  padding-right: 70px;\r\n  font-size: 25px;\r\n  padding-top: 30px;\r\n  float:right;\r\n}\r\n.left a {\r\n  color: #433F40;\r\n}\r\n.left a:hover {\r\n  color: #34DA74;\r\n}\r\n\r\n.right p {\r\n  color: #433F40;\r\n}\r\n.right p:hover {\r\n  cursor: pointer;\r\n  color: red;\r\n}\r\n\r\n.left p {\r\n  cursor: ponter;\r\n}\r\n\r\n@media only screen and (max-width: 700px) {\r\n    .left {\r\n    }\r\n    .right {\r\n      \r\n    }\r\n  }\r\n  @media only screen and (max-width: 500px) {\r\n    .left {\r\n    }\r\n    .right {\r\n\r\n    }\r\n  }\r\n  </style>","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../services/auth.service';\r\nimport { Router } from '@angular/router';\r\nimport { CardService } from '../services/card.service';\r\nimport { DateService } from '../services/date.service';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n  cards;\r\n  noOfDueCards;\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private router: Router,\r\n    private cardService: CardService,\r\n    private dateService: DateService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.noOfDueCards = 'no';\r\n    this.cardService.getCards().subscribe(cards => {\r\n      this.cards = cards;\r\n      this.getNoOfDueCards();\r\n    });\r\n  }\r\n\r\n  logout(): void {\r\n    this.authService.logout();\r\n    this.router.navigate(['/login']);\r\n  }\r\n\r\n  getNoOfDueCards() {\r\n    const today = this.dateService.transformDate(new Date());\r\n    if (this.cards.length >= 1) {\r\n      this.noOfDueCards = this.cards.filter(card => card.date <= today).length;\r\n    }\r\n    if (this.noOfDueCards === 0) {\r\n      this.noOfDueCards = 'no';\r\n    }\r\n  }\r\n}\r\n","\r\n<!-- <div class=\"header\">\r\n  <div class=\"left\"></div>\r\n  <div class=\"right\">\r\n    <p (click)=\"logout()\">Logout</p>\r\n  </div>\r\n</div> -->\r\n<app-header class=\"fw\"></app-header>\r\n\r\n<div class=\"container\">\r\n\r\n  <div class=\"content\">\r\n    <div class=\"greeting\">\r\n      <h1>Good morning</h1>\r\n      <p>Pick a study to start reviewing</p>\r\n    </div>\r\n\r\n    <div class=\"cards\">\r\n      <div class=\"card\">\r\n        <a [routerLink]=\"['/review']\">\r\n          <div class=\"upper\">\r\n          </div>\r\n          <div class=\"lower\">\r\n            <p>You have {{ noOfDueCards }} cards due</p>\r\n            <h3>Today</h3>\r\n          </div>\r\n        </a>\r\n      </div>\r\n      <div class=\"card\">\r\n        <a [routerLink]=\"['/shuffle']\">\r\n          <div class=\"upper\">\r\n          </div>\r\n          <div class=\"lower\">\r\n            <p>Randomized study</p>\r\n            <h3>5 Minute Shuffle</h3>\r\n          </div>\r\n        </a>\r\n      </div>\r\n      <div class=\"card\">\r\n        <a [routerLink]=\"['/custom']\">\r\n          <div class=\"upper\">\r\n          </div>\r\n          <div class=\"lower\">\r\n            <p>Preparing for a test?</p>\r\n            <h3>Custom study</h3>\r\n          </div>\r\n        </a>\r\n      </div>\r\n    </div>\r\n    <div class=\"add\">\r\n      <button nz-button nzType=\"success\"><a [routerLink]=\"['/add']\">Add card</a></button>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<style>\r\n  .greeting {\r\n    margin-top: 100px;\r\n    padding-bottom: 30px;\r\n  }\r\n  .greeting h1, .greeting p {\r\n    margin: 15px;\r\n  }\r\n  .greeting p {\r\n    margin-top: -15px;\r\n  }\r\n  .greeting h1 {\r\n    font-weight: bold;\r\n  }\r\n  .header {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    background-color: white;\r\n    height: 10vh;\r\n  }\r\n  .right {\r\n    padding-right: 50px;\r\n    font-size: 20px;\r\n    padding-top: 30px;\r\n    float:right;\r\n  }\r\n  .right p {\r\n    cursor: pointer;\r\n  }\r\n  .container {\r\n    display: flex; \r\n    justify-content: center;\r\n    flex-wrap: wrap;\r\n    background-color: #EBEFF5 !important;\r\n    width: 100vw;\r\n    height: calc(100vh - 100px);\r\n  }\r\n  .cards {\r\n    display: flex;\r\n    flex-direction: row;\r\n  }\r\n  .card {\r\n    border-radius: 10px;\r\n    margin: 10px;\r\n    background-color: white;\r\n    width: 200px;\r\n    height: 175px;\r\n  }\r\n  .upper {\r\n    background-color: #FBBC05;\r\n    height: 95px;\r\n    border-top-right-radius: 10px;\r\n    border-top-left-radius: 10px;\r\n  }\r\n  .lower {\r\n    height: 50px;\r\n    background-color: white;\r\n  }\r\n  .lower p {\r\n    padding-left: 15px;\r\n  }\r\n  .lower h3 {\r\n    padding-left: 15px;\r\n    margin-top: -10px;\r\n  }\r\n  .lower p {\r\n    padding-top: 10px;\r\n  }\r\n  a {\r\n    color: #747474;\r\n  }\r\n  .add {\r\n    position: relative;\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n  }\r\n  .add button {\r\n    margin-top: 70px;\r\n    height: 60px;\r\n    color: white;\r\n    font-weight: bold;\r\n    text-transform: uppercase;\r\n    background-color: rgb(52, 218, 116);\r\n    width: 300px;\r\n    border: none;\r\n    border-radius: 5px;\r\n  }\r\n  \r\n  @media only screen and (max-width: 700px) {\r\n    .greeting {\r\n      padding-bottom: 10px;\r\n    }\r\n    .card {\r\n      width: 150px;\r\n      height: 130px;\r\n      margin: 5px;\r\n    }\r\n    .upper {\r\n      height: 68px;\r\n    }\r\n    .lower {\r\n      height: 38px;\r\n    }\r\n    .lower p {\r\n      font-size: 12px;\r\n    }\r\n    .add button {\r\n      width: 175px;\r\n      height: 60px;\r\n    }\r\n    .lower h3 {\r\n      font-size: 14px;\r\n    }\r\n  }\r\n  @media only screen and (max-width: 500px) {\r\n    .greeting {\r\n      margin-top: 50px;\r\n    }\r\n    .cards {\r\n      flex-direction: column;\r\n    }\r\n    .card {\r\n      margin: 10px auto;\r\n      width: 225px;\r\n      height: 110px;\r\n    }\r\n    .upper {\r\n      height: 54px;\r\n    }\r\n    .lower {\r\n      height: 30px;\r\n    }\r\n    .lower p {\r\n      font-size: 9px;\r\n      padding-left: 10px;\r\n    }\r\n    .lower h3 {\r\n      font-size: 12px;\r\n      padding-left: 10px;\r\n      padding-bottom: 2px;\r\n    }\r\n    .add button {\r\n      margin-top: 20px;\r\n    }\r\n  }\r\n  @media only screen and (max-height: 720px) {\r\n    .container {\r\n      height: 100%;\r\n    }\r\n    .add {\r\n      margin-bottom: 20px;\r\n    }\r\n  }\r\n</style>","import { NgModule } from '@angular/core';\nimport { NZ_ICONS, NzIconModule } from 'ng-zorro-antd/icon';\n\nimport {\n  MenuFoldOutline,\n  MenuUnfoldOutline,\n  FormOutline,\n  DashboardOutline\n} from '@ant-design/icons-angular/icons';\n\nconst icons = [MenuFoldOutline, MenuUnfoldOutline, DashboardOutline, FormOutline];\n\n@NgModule({\n  imports: [NzIconModule],\n  exports: [NzIconModule],\n  providers: [\n    { provide: NZ_ICONS, useValue: icons }\n  ]\n})\nexport class IconsProviderModule {\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.css']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>page-not-found works!</p>\n","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { Router } from '@angular/router';\r\nimport { CardService } from '../../services/card.service';\r\nimport { DateService } from '../../services/date.service';\r\nimport { ICard } from '../../shared/card.interface';\r\nimport { FormBuilder } from '@angular/forms';\r\nimport { HotkeysService, Hotkey } from 'angular2-hotkeys';\r\nimport * as _ from 'lodash';\r\n\r\n\r\n@Component({\r\n  selector: 'app-custom',\r\n  templateUrl: './custom.component.html',\r\n  styleUrls: ['./custom.component.css']\r\n})\r\nexport class CustomComponent implements OnInit {\r\n  listOfOption: Array<{ label: string; value: string }> = [];\r\n  size2 = 'default';\r\n  newTags = [];\r\n\r\n  size = 'large';\r\n  cardToDisplay: ICard;\r\n  cards: ICard[];\r\n  index: number;\r\n  dueCards: ICard[];\r\n  revealAnswer: boolean;\r\n  progressPercent: number;\r\n  loaded: boolean = false;\r\n  selectedTags;\r\n  selectTagForm;\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private router: Router,\r\n    private cardService: CardService,\r\n    private dateService: DateService,\r\n    private formBuilder: FormBuilder,\r\n    private _hotkeysService: HotkeysService\r\n  ) {\r\n    this.selectTagForm = this.formBuilder.group({\r\n      tags: []\r\n    });\r\n    this._hotkeysService.add(new Hotkey('space', (event: KeyboardEvent): boolean => {\r\n      if (this.revealAnswer) {\r\n        this.nextCard();\r\n      } else {\r\n        this.toggleAnswer();\r\n      }\r\n      return false;\r\n    }));\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.cardService.getCards().subscribe(cards => {\r\n      this.cards = cards;\r\n      this.index = 0;\r\n      // this.progressPercent = 1 / this.dueCards.length * 100;\r\n      this.loaded = true;\r\n      this.listOfOption = this.getExistingTags();\r\n    });\r\n  }\r\n\r\n  logout(): void {\r\n    this.authService.logout();\r\n    this.router.navigate(['/login']);\r\n  }\r\n  getDueCards(): ICard[] {\r\n    return this.cards.filter(card => (card.tags.some((val) => this.selectedTags.indexOf(val) !== -1)));\r\n  }\r\n  nextCard(): void {\r\n    this.revealAnswer = false;\r\n    this.index++;\r\n    this.cardToDisplay = this.dueCards[this.index];\r\n    this.progressPercent = this.index / this.dueCards.length * 100;\r\n  }\r\n  toggleAnswer(): void {\r\n    this.revealAnswer = true;\r\n  }\r\n  selectTag(tag): void {\r\n    this.selectedTags = tag.tags;\r\n    console.log(tag.tags)\r\n    this.dueCards = this.getDueCards();\r\n    this.cardToDisplay = this.dueCards[this.index];\r\n\r\n  }\r\n\r\n  getExistingTags(): Array<any> {\r\n    const allTags = [];\r\n    if (this.cards){\r\n      this.cards.forEach(x => x.tags.forEach(element => {\r\n        allTags.push({ label: element, value: element });\r\n      }))\r\n    }\r\n    if (allTags.length === 0) {\r\n      return null;\r\n    }\r\n\r\n    const uniqueTags = _.uniqBy(allTags, 'label');\r\n    console.log(uniqueTags);\r\n    return uniqueTags;\r\n    // return Array.from(new Set(uniqueTags));\r\n  }\r\n}\r\n","<app-header class=\"fw\"></app-header>\r\n\r\n<div class=\"container\">\r\n  <div class=\"select\" *ngIf=\"!selectedTags; else showBlock\">\r\n    <form [formGroup]=\"selectTagForm\" (ngSubmit)=\"selectTag(selectTagForm.value)\">\r\n    <nz-select nzMode=\"tags\" [nzTokenSeparators]=\"[',']\" nzPlaceHolder=\"Select tags to include in your study\" formControlName=\"tags\" style=\"width:250px\">\r\n      <nz-option *ngFor=\"let option of listOfOption\" [nzLabel]=\"option.label\" [nzValue]=\"option.value\"></nz-option>\r\n    </nz-select>\r\n    <button id=\"submitBtn\" nz-button nzType=\"default\" type=\"submit\" style=\"margin-top: 30px;\">Confirm</button>\r\n    </form>\r\n  </div>\r\n</div>\r\n<ng-template #showBlock>\r\n<div class=\"container\" *ngIf=\"loaded; else loadingBlock\">\r\n  <div class=\"content\">\r\n    <div class=\"greeting\">\r\n      <h1 style=\"text-align: center;\">Custom</h1>\r\n      <p style=\"text-align: center;\" *ngIf=\"dueCards && index < dueCards.length\">{{index+1}} out of {{ dueCards.length }} cards</p>\r\n    </div>\r\n\r\n    <div class=\"cards\">\r\n      <div *ngIf=\"cardToDisplay; else elseBlock\"  class=\"card\">\r\n          <div class=\"upper\">\r\n              <nz-progress [nzPercent]=\"progressPercent\" [nzStrokeColor]=\"{ '0%': '#108ee9', '100%': '#87d068' }\"  [nzShowInfo]=\"false\"></nz-progress>\r\n              <div class=\"question center\">\r\n                <h2>{{ cardToDisplay.question }}</h2>\r\n              </div>\r\n          </div>\r\n          <div class=\"answer lower\" *ngIf=\"revealAnswer\">\r\n            <p>\r\n              {{ cardToDisplay.answer }}\r\n            </p>\r\n          </div>\r\n          <div class=\"revealButton\" (click)=\"toggleAnswer()\" *ngIf=\"!revealAnswer; else revealBlock\">\r\n            <p>\r\n              <span nz-tooltip nzTooltipTitle=\"See answer (SPACE)\" nzTooltipPlacement=\"bottom\">SEE ANSWER</span>\r\n            </p>\r\n          </div>\r\n      </div>\r\n      \r\n      <ng-template #revealBlock>\r\n        <div class=\"buttons\">\r\n          <div class=\"button againButton\" (click)=\"nextCard()\"><span nz-tooltip nzTooltipTitle=\"Next card (SPACE)\" nzTooltipPlacement=\"bottom\">NEXT</span>\r\n          </div>\r\n          <!-- <div class=\"button easyButton\" (click)=\"nextCard()\">EASY </div>\r\n          <div class=\"button mediumButton\" (click)=\"nextCard()\">MEDIUM </div>\r\n          <div class=\"button hardButton\" (click)=\"nextCard()\">HARD </div> -->\r\n        </div>\r\n      </ng-template>\r\n\r\n\r\n      <!-- Else -->\r\n      <ng-template #elseBlock>\r\n        <p style=\"text-align: center;\">Custom study complete! <a [routerLink]=\"['/home']\" style=\"color:#34DA74; font-weight: bold;\">Go back?</a></p>\r\n      </ng-template>\r\n\r\n    </div>\r\n    \r\n\r\n    </div>\r\n  </div>\r\n\r\n  <ng-template #loadingBlock>\r\n    <div class=\"container\">\r\n      <div class=\"loader\">\r\n        <nz-spin nzSimple [nzSize]=\"'large'\"></nz-spin>\r\n      </div>\r\n    </div>\r\n  </ng-template>\r\n</ng-template>\r\n\r\n<style>\r\n  .select {\r\n    padding-top: 100px;\r\n    width: 250px;\r\n    text-align: center;\r\n  }\r\n  .loader {\r\n    margin-top: 300px;\r\n  }\r\n  .tags {\r\n    margin-top: 45px;\r\n    margin-bottom: 10px;\r\n    display: flex;\r\n    justify-content: center;\r\n    flex-direction: row;\r\n    flex-wrap: wrap;\r\n  }\r\n  .question {\r\n    padding-top: 15px;\r\n  }\r\n  .answer {\r\n    text-align: center;\r\n    padding-top: 50px;\r\n  }\r\n  .center {\r\n    text-align: center;\r\n  }\r\n  .ant-progress-inner {\r\n    position: absolute !important;\r\n    top: 0 !important;\r\n  }\r\n\r\n  .greeting {\r\n    margin-top: 100px;\r\n    padding-bottom: 30px;\r\n  }\r\n  .greeting h1, .greeting p {\r\n    margin-top: 15px;\r\n  }\r\n  .greeting p {\r\n    margin-top: -15px;\r\n  }\r\n  .greeting h1 {\r\n    font-weight: bold;\r\n  }\r\n  .header {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    background-color: white;\r\n    height: 10vh;\r\n    align-content: center;\r\n  }\r\n  .left {\r\n    padding-left: 50px;\r\n    padding-top: 30px;\r\n    font-size: 20px;\r\n    justify-self: flex-start;\r\n  }\r\n  .right {\r\n    padding-right: 50px;\r\n    font-size: 20px;\r\n    padding-top: 30px;\r\n    float:right;\r\n  }\r\n  .right p {\r\n    cursor: pointer;\r\n  }\r\n  .left p {\r\n    cursor: pointer;\r\n  }\r\n  .container {\r\n    display: flex; \r\n    justify-content: center;\r\n    flex-wrap: wrap;\r\n    background-color: #EBEFF5 !important;\r\n    width: 100vw;\r\n    height: calc(100vh - 100px);\r\n  }\r\n  .cards {\r\n    display: flex;\r\n    flex-direction: row;\r\n  }\r\n  .card {\r\n    position: relative;\r\n    border-radius: 10px;\r\n    margin: 10px;\r\n    background-color: white;\r\n    width: 600px;\r\n    height: 300px;\r\n  }\r\n  .upper {\r\n    background: #F5F5F5;  /* fallback for old browsers */\r\n    height: 95px;\r\n    border-top-right-radius: 10px;\r\n    border-top-left-radius: 10px;\r\n  }\r\n  .lower {\r\n    height: 50px;\r\n    background-color: white;\r\n  }\r\n  .lower h3 {\r\n    margin-top: -10px;\r\n  }\r\n  .lower p {\r\n    font-size: 16px;\r\n    padding-top: 10px;\r\n  }\r\n  a {\r\n    color: #747474;\r\n  }\r\n  .add {\r\n    margin: 10px;\r\n    position: relative;\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n  }\r\n  .buttons {\r\n    margin-top: 150px;\r\n    display: flex;\r\n    text-align: center;\r\n    box-sizing:content-box;\r\n    border-top: 1px solid #f3f4f5;\r\n    height: 50px;\r\n    width: 100%;\r\n    position: absolute;\r\n    bottom: 0;\r\n    justify-content: center;\r\n  }\r\n  .button {\r\n    padding: 15px;\r\n    cursor: pointer;\r\n  } \r\n  .againButton {\r\n    color: #34DA74;\r\n  }\r\n  .revealButton {\r\n    text-align: center;\r\n    box-sizing: border-box;\r\n    border-top: 1px solid #F3F4F5;\r\n    height: 50px;\r\n    width: 100%;\r\n    position: absolute;\r\n    bottom: 0;\r\n  }\r\n  .revealButton:hover {\r\n    cursor: pointer;\r\n    font-size: 16px;\r\n  }\r\n  .revealButton p {\r\n    font-weight: 600;\r\n    padding-top: 15px;\r\n  }\r\n  \r\n  \r\n  @media only screen and (max-width: 700px) {\r\n    .greeting {\r\n      padding-bottom: 10px;\r\n    }\r\n    .card {\r\n      width: 450px;\r\n      height: 390px;\r\n      margin: 5px;\r\n    }\r\n  }\r\n  @media only screen and (max-width: 500px) {\r\n    .card {\r\n      width: 360px;\r\n      height: 312px;\r\n      margin: 2px;\r\n    }\r\n\r\n  }\r\n</style>","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { Router } from '@angular/router';\r\nimport { CardService } from '../../services/card.service';\r\nimport { ICard } from '../../shared/card.interface';\r\nimport { timer } from 'rxjs';\r\nimport { HotkeysService, Hotkey } from 'angular2-hotkeys';\r\nimport * as _ from 'lodash';\r\n\r\n@Component({\r\n  selector: 'app-random',\r\n  templateUrl: './random.component.html',\r\n  styleUrls: ['./random.component.css']\r\n})\r\nexport class RandomComponent implements OnInit {\r\n  cardToDisplay: ICard;\r\n  cards: ICard[];\r\n  index: number;\r\n  dueCards: ICard[];\r\n  revealAnswer: boolean;\r\n  progressPercent: number;\r\n  subscribeTimer: number;\r\n  totalTime: number;\r\n  timeLeft: number;\r\n  size = 'large';\r\n  loaded = false;\r\n\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private router: Router,\r\n    private cardService: CardService,\r\n    private _hotkeysService: HotkeysService,\r\n  ) {\r\n    this._hotkeysService.add(new Hotkey('space', (event: KeyboardEvent): boolean => {\r\n      if (this.revealAnswer) {\r\n        this.nextCard();\r\n      } else {\r\n        this.toggleAnswer();\r\n      }\r\n      return false;\r\n    }));\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.cardService.getCards().subscribe(cards => {\r\n      this.cards = cards;\r\n      this.index = 0;\r\n      this.dueCards = this.getDueCards();\r\n      this.cardToDisplay = this.dueCards[this.index];\r\n      this.loaded = true;\r\n      this.totalTime = 300;\r\n      this.progressPercent = 100;\r\n      this.timer();\r\n    });\r\n \r\n  }\r\n  timer(): void {\r\n    const source = timer(1000, 1000);\r\n    this.timeLeft = this.totalTime;\r\n    source.subscribe(value => {\r\n      if (value <= 300 && this.timeLeft >= 0) {\r\n        this.timeLeft = this.totalTime - value;\r\n        this.progressPercent = this.timeLeft / 3;\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  logout(): void {\r\n    this.authService.logout();\r\n    this.router.navigate(['/login']);\r\n  }\r\n  getDueCards(): ICard[] {\r\n    return _.shuffle(this.cards);\r\n  }\r\n  nextCard(): void {\r\n    this.revealAnswer = false;\r\n    this.index++;\r\n    this.cardToDisplay = this.dueCards[this.index];\r\n  }\r\n  toggleAnswer(): void {\r\n    this.revealAnswer = true;\r\n  }\r\n\r\n\r\n}\r\n","<app-header class=\"fw\"></app-header>\r\n\r\n<div class=\"container\" *ngIf=\"loaded; else loadingBlock\">\r\n  <div class=\"content\">\r\n    <div class=\"greeting\">\r\n      <h1 style=\"text-align: center;\">5 Minute Shuffle</h1>\r\n      <p style=\"text-align: center;\" *ngIf=\"dueCards && index < dueCards.length\">{{index+1}} out of {{ dueCards.length }} cards</p>\r\n    </div>\r\n\r\n    <div class=\"cards\">\r\n      <div *ngIf=\"cardToDisplay; else elseBlock\"  class=\"card\">\r\n          <div class=\"upper\">\r\n              <nz-progress [nzPercent]=\"progressPercent\" [nzStrokeColor]=\"{ '0%': '#108ee9', '100%': '#87d068' }\"  [nzShowInfo]=\"false\"></nz-progress>\r\n              <div class=\"question center\">\r\n                <h2>{{ cardToDisplay.question }}</h2>\r\n              </div>\r\n          </div>\r\n          <div class=\"answer lower\" *ngIf=\"revealAnswer\">\r\n            <p>\r\n              {{ cardToDisplay.answer }}\r\n            </p>\r\n          </div>\r\n          <div class=\"revealButton\" (click)=\"toggleAnswer()\" *ngIf=\"!revealAnswer; else revealBlock\">\r\n            <p>\r\n              <span nz-tooltip nzTooltipTitle=\"See answer (SPACE)\" nzTooltipPlacement=\"bottom\">SEE ANSWER</span>\r\n            </p>\r\n          </div>\r\n      </div>\r\n      \r\n      <ng-template #revealBlock>\r\n        <div class=\"buttons\">\r\n          <div class=\"button againButton\" (click)=\"nextCard()\"><span nz-tooltip nzTooltipTitle=\"Next card (SPACE)\" nzTooltipPlacement=\"bottom\">NEXT</span></div>\r\n        </div>\r\n      </ng-template>\r\n\r\n\r\n      <!-- Else -->\r\n      <ng-template #elseBlock>\r\n        <div class=\"container\">\r\n          <p style=\"text-align: center;\">Time's up! <a [routerLink]=\"['/home']\" style=\"color:#34DA74; font-weight: bold;\">Go back?</a></p>\r\n        </div>\r\n      </ng-template>\r\n\r\n    </div>\r\n    </div>\r\n  </div>\r\n\r\n  <ng-template #loadingBlock>\r\n    <div class=\"container\">\r\n      <div class=\"loader\">\r\n        <nz-spin nzSimple [nzSize]=\"'large'\"></nz-spin>\r\n      </div>\r\n    </div>\r\n  </ng-template>\r\n\r\n<style>\r\n  .loader {\r\n    margin-top: 300px;\r\n  }\r\n  .tags {\r\n    margin-top: 45px;\r\n    margin-bottom: 10px;\r\n    display: flex;\r\n    justify-content: center;\r\n    flex-direction: row;\r\n    flex-wrap: wrap;\r\n  }\r\n  .question {\r\n    padding-top: 15px;\r\n  }\r\n  .answer {\r\n    text-align: center;\r\n    padding-top: 50px;\r\n  }\r\n  .center {\r\n    text-align: center;\r\n  }\r\n  .ant-progress-inner {\r\n    position: absolute !important;\r\n    top: 0 !important;\r\n  }\r\n\r\n  .greeting {\r\n    margin-top: 100px;\r\n    padding-bottom: 30px;\r\n  }\r\n  .greeting h1, .greeting p {\r\n    margin-top: 15px;\r\n  }\r\n  .greeting p {\r\n    margin-top: -15px;\r\n  }\r\n  .greeting h1 {\r\n    font-weight: bold;\r\n  }\r\n  .header {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    background-color: white;\r\n    height: 10vh;\r\n    align-content: center;\r\n  }\r\n  .left {\r\n    padding-left: 50px;\r\n    padding-top: 30px;\r\n    font-size: 20px;\r\n    justify-self: flex-start;\r\n  }\r\n  .right {\r\n    padding-right: 50px;\r\n    font-size: 20px;\r\n    padding-top: 30px;\r\n    float:right;\r\n  }\r\n  .right p {\r\n    cursor: pointer;\r\n  }\r\n  .left p {\r\n    cursor: pointer;\r\n  }\r\n  .container {\r\n    display: flex; \r\n    justify-content: center;\r\n    flex-wrap: wrap;\r\n    background-color: #EBEFF5 !important;\r\n    width: 100vw;\r\n    height: calc(100vh - 100px);\r\n  }\r\n  .cards {\r\n    display: flex;\r\n    flex-direction: row;\r\n  }\r\n  .card {\r\n    position: relative;\r\n    border-radius: 10px;\r\n    margin: 10px;\r\n    background-color: white;\r\n    width: 600px;\r\n    height: 300px;\r\n  }\r\n  .upper {\r\n    background: #F5F5F5;  /* fallback for old browsers */\r\n    height: 95px;\r\n    border-top-right-radius: 10px;\r\n    border-top-left-radius: 10px;\r\n  }\r\n  .lower {\r\n    height: 50px;\r\n    background-color: white;\r\n  }\r\n  .lower h3 {\r\n    margin-top: -10px;\r\n  }\r\n  .lower p {\r\n    font-size: 16px;\r\n    padding-top: 10px;\r\n  }\r\n  a {\r\n    color: #747474;\r\n  }\r\n  .add {\r\n    margin: 10px;\r\n    position: relative;\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n  }\r\n  .buttons {\r\n    margin-top: 150px;\r\n    display: flex;\r\n    text-align: center;\r\n    box-sizing:content-box;\r\n    border-top: 1px solid #f3f4f5;\r\n    height: 50px;\r\n    width: 100%;\r\n    position: absolute;\r\n    bottom: 0;\r\n    justify-content: center;\r\n  }\r\n  .button {\r\n    padding: 15px;\r\n    cursor: pointer;\r\n  } \r\n  .againButton {\r\n    color: #34DA74;\r\n  }\r\n  .revealButton {\r\n    text-align: center;\r\n    box-sizing: border-box;\r\n    border-top: 1px solid #F3F4F5;\r\n    height: 50px;\r\n    width: 100%;\r\n    position: absolute;\r\n    bottom: 0;\r\n  }\r\n  .revealButton:hover {\r\n    cursor: pointer;\r\n    font-size: 16px;\r\n  }\r\n  .revealButton p {\r\n    font-weight: 600;\r\n    padding-top: 15px;\r\n  }\r\n  \r\n  \r\n  @media only screen and (max-width: 700px) {\r\n    .greeting {\r\n      padding-bottom: 10px;\r\n    }\r\n    .card {\r\n      width: 450px;\r\n      height: 390px;\r\n      margin: 5px;\r\n    }\r\n  }\r\n  @media only screen and (max-width: 500px) {\r\n    .card {\r\n      width: 360px;\r\n      height: 312px;\r\n      margin: 2px;\r\n    }\r\n\r\n  }\r\n</style>","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../services/auth.service';\r\nimport { Router } from '@angular/router';\r\nimport { CardService } from '../services/card.service';\r\nimport { DateService } from '../services/date.service';\r\nimport { ICard } from '../shared/card.interface';\r\nimport { HotkeysService, Hotkey } from 'angular2-hotkeys';\r\n\r\n@Component({\r\n  selector: 'app-review',\r\n  templateUrl: './review.component.html',\r\n  styleUrls: ['./review.component.css']\r\n})\r\nexport class ReviewComponent implements OnInit {\r\n  size = 'large';\r\n  cardToDisplay: ICard;\r\n  cards: ICard[];\r\n  index: number;\r\n  dueCards: ICard[];\r\n  revealAnswer: boolean;\r\n  progressPercent: number;\r\n  loaded: boolean = false;\r\n  today;\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private router: Router,\r\n    private cardService: CardService,\r\n    private dateService: DateService,\r\n    private _hotkeysService: HotkeysService\r\n  ) {\r\n      this._hotkeysService.add(new Hotkey('1', (event: KeyboardEvent): boolean => {\r\n        this.againClick();\r\n        return false;\r\n      }));\r\n      this._hotkeysService.add(new Hotkey('2', (event: KeyboardEvent): boolean => {\r\n        this.easyClick();\r\n        return false;\r\n      }));\r\n      this._hotkeysService.add(new Hotkey('3', (event: KeyboardEvent): boolean => {\r\n        this.mediumClick();\r\n        return false;\r\n      }));\r\n      this._hotkeysService.add(new Hotkey('4', (event: KeyboardEvent): boolean => {\r\n        this.hardClick();\r\n        return false;\r\n      }));\r\n      this._hotkeysService.add(new Hotkey('space', (event: KeyboardEvent): boolean => {\r\n        if (this.revealAnswer) {\r\n          this.easyClick();\r\n        } else {\r\n          this.toggleAnswer();\r\n        }\r\n        return false;\r\n      }));\r\n    }\r\n\r\n  ngOnInit(): void {\r\n    this.cardService.getCards().subscribe(cards => {\r\n      this.cards = cards;\r\n      this.index = 0;\r\n      this.today = this.dateService.transformDate(new Date());\r\n      this.dueCards = this.getDueCards();\r\n      this.cardToDisplay = this.dueCards[this.index];\r\n      this.progressPercent = 1 / this.dueCards.length * 100;\r\n      this.loaded = true;\r\n    });\r\n  }\r\n\r\n  logout(): void {\r\n    this.authService.logout();\r\n    this.router.navigate(['/login']);\r\n  }\r\n  getDueCards(): ICard[] {\r\n    return this.cards.filter(card => (card.date <= this.today));\r\n  }\r\n  againClick(): void {\r\n    // const card = this.dueCards[this.index];\r\n    // this.dueCards.push(card);\r\n    this.nextCard();\r\n  }\r\n  easyClick(): void {\r\n    const card = this.dueCards[this.index];\r\n    const newDate = new Date();\r\n    card.date = this.dateService.transformDate(newDate.setDate(newDate.getDate() + 4));\r\n    this.cardService.updateCard(card).subscribe();\r\n    this.nextCard();\r\n  }\r\n  mediumClick(): void {\r\n    const card = this.dueCards[this.index];\r\n    const newDate = new Date();\r\n    card.date = this.dateService.transformDate(newDate.setDate(newDate.getDate() + 3));\r\n    this.cardService.updateCard(card).subscribe();\r\n    this.nextCard();\r\n  }\r\n  hardClick(): void {\r\n    const card = this.dueCards[this.index];\r\n    const newDate = new Date();\r\n    card.date = this.dateService.transformDate(newDate.setDate(newDate.getDate() + 1));\r\n    this.cardService.updateCard(card).subscribe();\r\n    this.nextCard();\r\n  }\r\n  nextCard(): void {\r\n    this.revealAnswer = false;\r\n    this.index++;\r\n    this.cardToDisplay = this.dueCards[this.index];\r\n    this.progressPercent = this.index / this.dueCards.length * 100;\r\n  }\r\n  toggleAnswer(): void {\r\n    this.revealAnswer = true;\r\n  }\r\n\r\n\r\n}\r\n","<app-header class=\"fw\"></app-header>\n\n<div class=\"container\" *ngIf=\"loaded; else loadingBlock\">\n  <div class=\"content\">\n    <div class=\"greeting\">\n      <h1 style=\"text-align: center;\">Today</h1>\n      <p style=\"text-align: center;\" *ngIf=\"dueCards && index < dueCards.length\">{{index+1}} out of {{ dueCards.length }} cards</p>\n    </div>\n\n      <div class=\"cards\">\n        <div *ngIf=\"cardToDisplay; else elseBlock\"  class=\"card\">\n            <div class=\"upper\">\n                <nz-progress [nzPercent]=\"progressPercent\" [nzStrokeColor]=\"{ '0%': '#108ee9', '100%': '#87d068' }\"  [nzShowInfo]=\"false\"></nz-progress>\n                <div class=\"question center\">\n                  <h2>{{ cardToDisplay.question }}</h2>\n                </div>\n            </div>\n            <div class=\"answer lower\" *ngIf=\"revealAnswer\">\n              <p>\n                {{ cardToDisplay.answer }}\n              </p>\n            </div>\n            <div class=\"revealButton\" (click)=\"toggleAnswer()\" *ngIf=\"!revealAnswer; else revealBlock\">\n              <p>\n                <span nz-tooltip nzTooltipTitle=\"See answer (SPACE)\" nzTooltipPlacement=\"bottom\">SEE ANSWER</span>\n              </p>\n            </div>\n        </div>\n        \n        <ng-template #revealBlock>\n          <div class=\"buttons\">\n            <div class=\"button againButton\" (click)=\"againClick()\"> <span nz-tooltip nzTooltipTitle=\"Try again (1)\" nzTooltipPlacement=\"bottomLeft\">AGAIN</span></div>\n            <div class=\"button easyButton\" (click)=\"easyClick()\"><span nz-tooltip nzTooltipTitle=\"Effortless (SPACE || 2)\" nzTooltipPlacement=\"bottom\">EASY</span> </div>\n            <div class=\"button mediumButton\" (click)=\"mediumClick()\"><span nz-tooltip nzTooltipTitle=\"Could be better (3)\" nzTooltipPlacement=\"bottom\">MEDIUM</span> </div>\n            <div class=\"button hardButton\" (click)=\"hardClick()\"><span nz-tooltip nzTooltipTitle=\"Need to freshen up (4)\" nzTooltipPlacement=\"bottomRight\">HARD</span> </div>\n          </div>\n        </ng-template>\n\n\n        <!-- Else -->\n        <ng-template #elseBlock>\n          <p style=\"text-align: center;\">You're all caught up, good job!  <a [routerLink]=\"['/home']\" style=\"color:#34DA74; font-weight: bold;\">Go back?</a></p>\n        </ng-template>\n\n      </div>\n    </div>\n  </div>\n\n  <ng-template #loadingBlock>\n    <div class=\"container\">\n      <div class=\"loader\">\n        <nz-spin nzSimple [nzSize]=\"'large'\"></nz-spin>\n      </div>\n    </div>\n  </ng-template>","import { Injectable } from '@angular/core';\r\nimport { HttpHeaders, HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport { throwError } from 'rxjs';\r\nimport { IUser } from '../shared/user.interface';\r\nimport { CardService } from './card.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n    configUrl = 'https://pi-7a130fdb.localhost.run/user'; //RASPBERRY PI\r\n \r\n  headers = new HttpHeaders().set('Content-Type', 'application/json');\r\n  currentUser = {};\r\n  erServerOppe: boolean;\r\n\r\n  constructor(private http: HttpClient, public router: Router) {\r\n\r\n  }\r\n\r\n\r\n  register(user: IUser) {\r\n    return this.http.post(`${this.configUrl}/signup`, user);\r\n  }\r\n\r\n  login(user: IUser) {\r\n    return this.http.post<any>(`${this.configUrl}/login`, user);\r\n  }\r\n\r\n  getAccessToken() {\r\n    const token = localStorage.getItem('authorization');\r\n    return token;\r\n  }\r\n\r\n  isLoggedIn(): boolean {\r\n    const authToken = this.getAccessToken();\r\n    return (authToken !== null) ? true : false;\r\n  }\r\n\r\n  logout() {\r\n    if (localStorage.removeItem('authorization') === null) {\r\n      this.router.navigate(['/login']);\r\n    }\r\n  }\r\n\r\n  public isAuthenticated(): boolean {\r\n    const userData = localStorage.getItem('userInfo');\r\n    if (userData && JSON.parse(userData)){\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  handleError(error: HttpErrorResponse) {\r\n    let msg = '';\r\n    if (error.error instanceof ErrorEvent) {\r\n      msg = `Client Error: ${error.error.message}`;\r\n    } else {\r\n      msg = `Server Error code: ${error.status}\\nMessage: ${error.message}`;\r\n    }\r\n    return throwError(msg);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { ICard } from '../shared/card.interface';\r\nimport { AuthService } from './auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CardService {\r\n  configUrl = 'https://pi-7a130fdb.localhost.run/api/flashcards'; //RASPBERRY PI\r\n\r\n  token;\r\n\r\n  constructor(private http: HttpClient, private authService: AuthService) {\r\n\r\n  }\r\n\r\n\r\n  getCards(): Observable<ICard[]> {\r\n    return this.http.get<ICard[]>(this.configUrl);\r\n  }\r\n  addCard(newCard: ICard): Observable<ICard> {\r\n    if (newCard.tags === null) {\r\n      newCard.tags = [];\r\n    }\r\n    newCard.user = this.authService.getAccessToken();\r\n    return this.http.post<ICard>(this.configUrl, newCard);\r\n  }\r\n  updateCard(updatedCard: ICard): Observable<ICard> {\r\n    const url = `${this.configUrl}/${updatedCard.id}`;\r\n    return this.http.put<ICard>(url, updatedCard);\r\n  }\r\n  deleteCard(cardToDelete: ICard): Observable<{}> {\r\n    const url = `${this.configUrl}/${cardToDelete.id}`;\r\n    return this.http.delete(url);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { DatePipe } from '@angular/common';\r\n\r\n@Injectable()\r\nexport class DateService {\r\n  constructor(private datePipe: DatePipe) {\r\n\r\n  }\r\n\r\n  transformDate(date) {\r\n    return this.datePipe.transform(date, 'dd-MM-yyyy');\r\n  }\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}